const { isArray } = require(`lodash`)

const SECTIONS = [
  `SKILLTYPES`,
  `BASICDAMAGE`,
  `CONVERTDICE`,
  `BODY`,
  `SYMBOLS`,
  `BODYIMAGES`,
  `ATTRIBUTES`,
  `ADVANTAGES`,
  `LANGUAGES`,
  `CULTURES`,
  `QUIRKS`,
  `PERKS`,
  `FEATURES`,
  `DISADVANTAGES`,
  `QUIRKS`,
  `SKILLS`,
  `SPELLS`,
  `TEMPLATES`,
  `EQUIPMENT`,
  `MODIFIERS`,
  `GROUPS`,
  `LISTS`,
  `BONUSCLASSES`,
  `WIZARDS`,
]
const IGNORE_IMPLICIT_FOR_SECTIONS = [`FEATURES`]

const META_SECTIONS = [`TRAITS`, `PARENTTRAITS`, `OWNERTRAITS`, `SYSTEMTRAITS`]

const COMPOUND_SECTIONS = {
  TRAITS: [`ATTRIBUTES`, `LANGUAGES`, `CULTURES`, `ADVANTAGES`, `PERKS`, `FEATURES`, `QUIRKS`, `DISADVANTAGES`, `SKILLS`, `SPELLS`, `TEMPLATES`, `EQUIPMENT`],
  [`TRAITS-WITH-DAMAGE-MODES`]: [`ATTRIBUTES`, `ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`, `SKILLS`, `SPELLS`, `EQUIPMENT`, `TEMPLATES`],
  [`TRAITS-!ATTRIBUTES-!SKILLS-!SPELLS`]: [`ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`, `EQUIPMENT`, `TEMPLATES`],
  [`TRAITS-!SKILLS-!SPELLS-!EQUIPMENT`]: [`ATTRIBUTES`, `ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`, `TEMPLATES`],
  [`TRAITS-!EQUIPMENT`]: [`ATTRIBUTES`, `ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`, `SKILLS`, `SPELLS`, `TEMPLATES`],
}

const PREFIX_TAGS = {
  ST: `ATTRIBUTES`,
  LA: `LANGUAGES`,
  CU: `CULTURES`,
  AD: `ADVANTAGES`,
  PE: `PERKS`,
  FE: `FEATURES`,
  DI: `DISADVANTAGES`,
  QU: `QUIRKS`,
  SK: `SKILLS`,
  SP: `SPELLS`,
  TE: `TEMPLATES`,
  EQ: `EQUIPMENT`,
  GR: `GROUPS`,
  LI: `LISTS`,
}

const _tagsTypesIndex = [
  [[`cost`, `base`, `defaultstat`, `relname`, `stepadds`, `subzero`, `zeropointsokay`, ``], `SKILLTYPES`],
  [[`st`, `thr`, `sw`], `BASICDAMAGE`],
  [[`break`, `adddice`, `subtract`], `CONVERTDICE`],
  [[`name`, `display`, `expanded`, `group`, `posx`, `pos`], `BODY`],
  // [[], `SYMBOLS`],
  // [[], `BODYIMAGES`],
  [[`BaseValue`, `Display`, `Down`, `DownFormula`, `InPlayMult`, `MainWin`, `MaxScore`, `MinScore`, `Round`, `Step`, `Symbol`, `Up`, `UpFormula`], `ATTRIBUTES`],
  // [[], `ADVANTAGES`],
  // [[], `LANGUAGES`],
  // [[], `CULTURES`],
  [[`Base`], [`ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`]],
  [
    [
      `AddMods`,
      `Adds`,
      `BlockAt`,
      `Cat`,
      `ChildOf`,
      `Conditional`,
      `CountAsNeed`,
      `CountCapacity`,
      `Creates`,
      `DB`,
      `Deflect`,
      `Description`,
      `DisplayNameFormula`,
      `DR`,
      `DRNotes`,
      `FencingWeapon`,
      `Fortify`,
      `Gives`,
      `Group`,
      `Hide`,
      `HideMe`,
      `Highlight`,
      `HighlightMe`,
      `Ident`,
      `InitMods`,
      `Bulk`,
      `ItemNotes`,
      `Links`,
      `MergeTags`,
      `Mods`,
      `Name`,
      `NameExt`,
      `Needs`,
      `NewMode`,
      `Notes`,
      `Page`,
      `ParentOf`,
      `ParryAt`,
      `RemoveMods`,
      `ReplaceTags`,
      `RoundLastOnly`,
      `ScopeAcc`,
      `SkillUsed`,
      `STCap`,
      `SubsFor`,
      `Taboo`,
      `TargetListIncludes`,
      `TL`,
      `Units`,
      `UpTo`,
      `UserNotes`,
      `Uses`,
      `Uses_sections`,
      `Uses_settings`,
      `Uses_used`,
      `Vars`,
      `VTTNotes`,
      `VTTModeNotes`,
      `WeightCapacity`,
      `WeightCapacityUnits`,
    ],
    `TRAITS`,
  ],
  [
    [
      `acc`,
      `ArmorDivisor`,
      `Break`,
      `Damage`,
      `DamageBasedOn`,
      `DamageIsText`,
      `DamType`,
      `LC`,
      `MaxDam`,
      `MinST`,
      `MinSTBasedOn`,
      `Mode`,
      `Parry`,
      `Radius`,
      `RangeHalfDam`,
      `RangeMax`,
      `Rcl`,
      `Reach`,
      `ReachBasedOn`,
      `ROF`,
      `Shots`,
    ],
    `TRAITS-WITH-DAMAGE-MODES`,
  ],
  //
  [[`ChildProfile`, `Collapse`, `CollapseMe`], `PARENTTRAITS`],
  [[`Collapse`, `CollapseMe`], `OWNERTRAITS`],
  //
  [[`Formula`, `Cost`], `TRAITS-!ATTRIBUTES-!SKILLS-!SPELLS`],
  [[`Init`, `LevelNames`], `TRAITS-!SKILLS-!SPELLS-!EQUIPMENT`],
  [[`DownTo`], `TRAITS-!EQUIPMENT`],
  [[`DisplayName`, `Invisible`], `SYSTEMTRAITS`],
  // [[], `PERKS`],
  // [[], `FEATURES`],
  // [[], `DISADVANTAGES`],
  // [[], `QUIRKS`],
  [[`Cost`, `default`, `OptSpec`, `Stat`, `Type`], `SKILLS`],
  [[`Cost`, `default`, `OptSpec`, `Stat`, `Type`], `SPELLS`],
  [
    [
      `AddsOrIncreases`,
      `Age`,
      `Appearance`,
      `BodyType`,
      `CharHeight`,
      `CharWeight`,
      `Features`,
      `Hides`,
      `HitTable`,
      `Locks`,
      `Lockstep`,
      `Message`,
      `Owns`,
      `Race`,
      `Removes`,
      `RemovesByTag`,
      `Select`,
      `SelectX`,
      `Sets`,
      `Triggers`,
    ],
    `TEMPLATES`,
  ],
  [[`ammo`, `BaseCost`, `BaseWeight`, `Count`, `Loadout`, `Location`, `TechLvl`, `Where`], `EQUIPMENT`],
  [
    [
      `addmode`,
      `Cost`,
      `Description`,
      `DisplayNameFormula`,
      `DownTo`,
      `ForceFormula`,
      `Formula`,
      `Gives`,
      `Group`,
      `InitMods`,
      `Level`,
      `Mitigator`,
      `Mods`,
      `Name`,
      `NameExt`,
      `Page`,
      `Round`,
      `RoundMods`,
      `ShortLevelNames`,
      `ShortName`,
      `Tier`,
    ],
    `MODIFIERS`,
  ],
  // [[], `GROUPS`],
  // [[], `LISTS`],
  // [[], `BONUSCLASSES`],
  // [[], `WIZARDS`],
]

const TAG_TO_TYPES = {}
for (const [_tags, _types] of _tagsTypesIndex) {
  const types = isArray(_types) ? _types : [_types]
  const tags = _tags.filter(t => t !== ``).map(t => t.toLowerCase())

  for (const tag of tags) {
    if (TAG_TO_TYPES[tag] === undefined) TAG_TO_TYPES[tag] = []
    TAG_TO_TYPES[tag].push(...types)
  }
}
for (const tag in TAG_TO_TYPES) {
  TAG_TO_TYPES[tag] = [...new Set(TAG_TO_TYPES[tag])]
}

const GENERIC_TAGS = [
  `name`,
  `isparent`,
  `x`,
  `y`,
  `noresync`,
  `resync`,
  `displaycost`,
  `displayweight`,
  `select1`,
  `select2`,
  `select3`,
  `select4`,
  `select5`,
  `select6`,
  `select7`,
  `select8`,
  `select9`,
  `select10`,
  `select11`,
  `select12`,
  `select13`,
  `select14`,
  `select15`,
  `select16`,
  `select17`,
  `select18`,
  `select19`,
]

//
module.exports.SECTIONS = SECTIONS
module.exports.IGNORE_IMPLICIT_FOR_SECTIONS = IGNORE_IMPLICIT_FOR_SECTIONS
module.exports.PREFIX_TAGS = PREFIX_TAGS

module.exports.META_SECTIONS = META_SECTIONS
module.exports.COMPOUND_SECTIONS = COMPOUND_SECTIONS

module.exports.TAG_TO_TYPES = TAG_TO_TYPES
module.exports.GENERIC_TAGS = GENERIC_TAGS
