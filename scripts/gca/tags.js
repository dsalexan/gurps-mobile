const { isArray } = require(`lodash`)

const N = 12848

const TAGS_DISTRIBUITION = {
  name: 12848,
  cat: 12646,
  basecost: 3691,
  techlvl: 3183,
  description: 6376,
  page: 12315,
  mods: 7225,
  isparent: 92,
  basevalue: 198,
  mainwin: 18,
  display: 165,
  baseweight: 3555,
  lc: 1935,
  uses: 1097,
  ammo: 590,
  itemnotes: 1267,
  damage: 1584,
  damtype: 1580,
  minst: 1291,
  rangehalfdam: 1047,
  rangemax: 1096,
  acc: 1076,
  rof: 1043,
  shots: 1043,
  notes: 1182,
  skillused: 1909,
  cost: 3435,
  taboo: 554,
  gives: 923,
  type: 5016,
  default: 2028,
  parryat: 172,
  blockat: 85,
  x: 1558,
  noresync: 1292,
  displaycost: 2268,
  childprofile: 2,
  displayweight: 276,
  location: 1016,
  dr: 1061,
  armordivisor: 248,
  bulk: 965,
  rcl: 968,
  reach: 594,
  parry: 642,
  owns: 484,
  locks: 428,
  hides: 472,
  select1: 712,
  select2: 446,
  select3: 353,
  select4: 311,
  select5: 283,
  select6: 183,
  select7: 157,
  select8: 124,
  calcrange: 207,
  upto: 1907,
  initmods: 1564,
  powerdodge: 48,
  mentalpowerblock: 48,
  physicalpowerblock: 48,
  mode: 967,
  race: 277,
  select9: 82,
  tl: 463,
  countasneed: 2548,
  ident: 2699,
  shortcat: 2811,
  class: 2677,
  time: 2772,
  duration: 2802,
  castingcost: 2676,
  nameext: 7102,
  needs: 3805,
  prereqcount: 2488,
  conditional: 379,
  "x(#InputToTagReplace": 2,
  "#InputReplace": 1,
  "#ChoiceList": 2,
  "_#ChoiceList": 2,
  power: 40,
  displayname: 143,
  don: 617,
  basecostmultiplier: 143,
  levelnames: 321,
  sets: 333,
  adds: 1140,
  replacetags: 737,
  countasneeds: 129,
  magery: 1482,
  parentof: 223,
  appearance: 12,
  creates: 369,
  features: 84,
  reachbasedon: 80,
  drnotes: 108,
  tagwith: 1,
  select10: 49,
  damagebasedon: 82,
  elixircost: 136,
  recipecost: 136,
  potion: 122,
  powder: 106,
  pastille: 60,
  ointment: 110,
  altname: 128,
  baseapppoints: 121,
  symbol: 212,
  maxscore: 152,
  minscore: 161,
  hide: 109,
  up: 20,
  down: 20,
  step: 29,
  round: 52,
  radius: 29,
  fuse: 28,
  familiarities: 147,
  conditonal: 3,
  break: 391,
  usernotes: 184,
  db: 44,
  hp: 127,
  holdout: 474,
  default0: 7,
  default1: 3,
  default2: 2,
  default3: 2,
  select11: 19,
  select12: 10,
  newlocation: 22,
  basedr: 241,
  malf: 67,
  descrition: 1,
  basedon: 6,
  optspec: 6,
  weightcapacity: 11,
  piercingdr: 23,
  cuttingdr: 23,
  roundup: 2,
  disadat: 10,
  modifiers: 135,
  impalingdr: 38,
  coverage: 161,
  paddingcost: 67,
  units: 20,
  st: 16,
  dx: 16,
  iq: 16,
  ht: 16,
  will: 16,
  per: 16,
  speed: 16,
  dodge: 16,
  move: 18,
  sm: 16,
  size: 16,
  weight: 31,
  traits: 16,
  skills: 16,
  dispaycost: 1,
  locations: 1,
  weaponst: 23,
  tagswith: 3,
  charminst: 8,
  dmg: 8,
  precountcost: 9,
  precountweight: 9,
  multitype: 2,
  emptyweight: 6,
  lockstep: 1,
  init: 79,
  subsfor: 6,
  group: 2,
  elementalist: 2,
  modes: 2,
  fencingweapon: 5,
  existing: 2,
  uses_sections: 1,
  uses_settings: 1,
  shortname: 6,
  CountAsNeed: 1,
  crushingdr: 159,
  ammoweight: 3,
  countcapacity: 3,
  ndl: 3,
  vars: 2,
  displaynameformula: 2,
  links: 2,
  shieldarc: 1,
  load: 1,
  select13: 1,
  hideme: 15,
  ta: 2,
  '"displaycost': 2,
  feature: 1,
  rapidfire: 1,
  y: 1,
  targetlistincludes: 1,
  note: 1,
}

let TAG_DIRECTIVES = {}
TAG_DIRECTIVES = {
  name: { type: [`string`] },
  cat: { type: [`array`, `string`] },
  basecost: { type: [`string`] },
  techlvl: { type: [`string`] },
  description: { type: [`string`] },
  page: { type: [`array`, `string`] },
  mods: { type: [`array`, `string`] },
  isparent: { type: [`boolean`] },
  basevalue: { type: [`string`] },
  mainwin: { type: [`string`] },
  display: { type: [`boolean`] },
  baseweight: { type: [`string`] },
  lc: { type: [`string`] },
  uses: { type: [`string`] },
  ammo: { type: [`array`, `string`] },
  itemnotes: { type: [`array`, `string`] },
  damage: { type: [`string`] },
  damtype: { type: [`string`] },
  minst: { type: [`string`] },
  rangehalfdam: { type: [`string`] },
  rangemax: { type: [`string`] },
  acc: { type: [`string`] },
  rof: { type: [`string`] },
  shots: { type: [`string`] },
  notes: { type: [`string`] },
  skillused: { type: [`array`, `string`] },
  cost: { type: [`string`] },
  taboo: { type: [`array`, `string`] },
  gives: { type: [`array`] },
  type: { type: [`string`] },
  default: { type: [`array`, `string`] },
  parryat: { type: [`string`] },
  blockat: { type: [`string`] },
  x: { type: [`array`, `object`] },
  noresync: { type: [`boolean`] },
  displaycost: { type: [`string`] },
  childprofile: { type: [`string`] },
  displayweight: { type: [`string`] },
  location: { type: [`array`, `string`] },
  dr: { type: [`string`] },
  armordivisor: { type: [`string`] },
  bulk: { type: [`string`] },
  rcl: { type: [`string`] },
  reach: { type: [`array`, `string`] },
  parry: { type: [`string`] },
  owns: { type: [`boolean`] },
  locks: { type: [`boolean`] },
  hides: { type: [`boolean`] },
  select1: { type: [`object`] },
  select2: { type: [`object`] },
  select3: { type: [`object`] },
  select4: { type: [`object`] },
  select5: { type: [`object`] },
  select6: { type: [`object`] },
  select7: { type: [`object`] },
  select8: { type: [`object`] },
  calcrange: { type: [`boolean`] },
  upto: { type: [`string`] },
  initmods: { type: [`object`] },
  powerdodge: { type: [`string`] },
  mentalpowerblock: { type: [`string`] },
  physicalpowerblock: { type: [`string`] },
  mode: { type: [`string`] },
  race: { type: [`string`] },
  select9: { type: [`object`] },
  tl: { type: [`string`] },
  countasneed: { type: [`array`, `string`] },
  ident: { type: [`string`] },
  shortcat: { type: [`array`, `string`] },
  class: { type: [`array`, `string`] },
  time: { type: [`string`] },
  duration: { type: [`string`] },
  castingcost: { type: [`array`, `string`] },
  nameext: { type: [`string`] },
  needs: { type: [`array`] },
  prereqcount: { type: [`string`] },
  conditional: { type: [`array`, `string`] },
  power: { type: [`string`] },
  displayname: { type: [`string`] },
  don: { type: [`string`] },
  basecostmultiplier: { type: [`string`] },
  levelnames: { type: [`array`, `string`] },
  sets: { type: [`array`, `string`] },
  adds: { type: [`array`] },
  replacetags: { type: [`array`] },
  countasneeds: { type: [`string`] },
  magery: { type: [`string`] },
  parentof: { type: [`array`, `string`] },
  appearance: { type: [`string`] },
  creates: { type: [`array`] },
  features: { type: [`array`, `string`] },
  reachbasedon: { type: [`string`] },
  drnotes: { type: [`array`, `string`] },
  tagwith: { type: [`object`] },
  select10: { type: [`object`] },
  damagebasedon: { type: [`string`] },
  elixircost: { type: [`string`] },
  recipecost: { type: [`string`] },
  potion: { type: [`string`] },
  powder: { type: [`string`] },
  pastille: { type: [`string`] },
  ointment: { type: [`string`] },
  altname: { type: [`string`] },
  baseapppoints: { type: [`string`] },
  symbol: { type: [`array`, `string`] },
  maxscore: { type: [`string`] },
  minscore: { type: [`string`] },
  hide: { type: [`boolean`] },
  up: { type: [`string`] },
  down: { type: [`string`] },
  step: { type: [`string`] },
  round: { type: [`string`] },
  radius: { type: [`string`] },
  fuse: { type: [`string`] },
  familiarities: { type: [`string`] },
  conditonal: { equivalent: `conditional` },
  break: { type: [`string`] },
  usernotes: { type: [`array`, `string`] },
  db: { type: [`string`] },
  hp: { type: [`string`] },
  holdout: { type: [`string`] },
  default0: { type: [`string`] },
  default1: { type: [`string`] },
  default2: { type: [`string`] },
  default3: { type: [`string`] },
  select11: { type: [`object`] },
  select12: { type: [`object`] },
  newlocation: { type: [`array`, `string`] },
  basedr: { type: [`array`, `string`] },
  malf: { type: [`string`] },
  descrition: { equivalent: `description` },
  basedon: { type: [`array`, `string`] },
  optspec: { type: [`array`, `string`] },
  weightcapacity: { type: [`array`, `string`] },
  piercingdr: { type: [`array`, `string`] },
  cuttingdr: { type: [`array`, `string`] },
  roundup: { type: [`array`, `string`] },
  disadat: { type: [`array`, `string`] },
  modifiers: { type: [`string`] },
  impalingdr: { type: [`array`, `string`] },
  coverage: { type: [`array`, `string`] },
  paddingcost: { type: [`string`] },
  units: { type: [`array`, `string`] },
  st: { type: [`string`] },
  dx: { type: [`string`] },
  iq: { type: [`string`] },
  ht: { type: [`string`] },
  will: { type: [`string`] },
  per: { type: [`string`] },
  speed: { type: [`string`] },
  dodge: { type: [`string`] },
  move: { type: [`string`] },
  sm: { type: [`string`] },
  size: { type: [`string`] },
  weight: { type: [`string`] },
  traits: { type: [`array`, `string`], delimiter: `;`, discardFinalPoint: true },
  skills: { type: [`array`, `string`], delimiter: `;`, discardFinalPoint: true },
  dispaycost: { equivalent: `displaycost` },
  locations: { equivalent: `location` },
  weaponst: { type: [`string`] },
  tagswith: { equivalent: [`tagwith`] },
  charminst: { type: [`string`] },
  dmg: { type: [`string`] },
  precountcost: { type: [`string`] },
  precountweight: { type: [`string`] },
  multitype: { type: [`boolean`] },
  emptyweight: { type: [`string`] },
  lockstep: { type: [`boolean`] },
  init: { type: [`string`] },
  subsfor: { type: [`array`, `string`] },
  group: { type: [`string`] },
  elementalist: { type: [`boolean`] },
  modes: { type: [`string`] },
  fencingweapon: { type: [`string`] },
  existing: { type: [`string`] },
  uses_sections: { type: [`string`] },
  uses_settings: { type: [`array`] },
  shortname: { type: [`string`] },
  crushingdr: { type: [`string`] },
  ammoweight: { type: [`string`] },
  countcapacity: { type: [`string`] },
  ndl: { type: [`string`] },
  vars: { type: [`array`, `string`] },
  displaynameformula: { type: [`string`] },
  links: { type: [`boolean`] },
  shieldarc: { type: [`string`] },
  load: { type: [`string`] },
  select13: { type: [`object`] },
  hideme: { type: [`string`] },
  ta: { type: [`boolean`] },
  feature: { type: [`string`] },
  rapidfire: { type: [`string`] },
  y: { type: [`array`, `object`] },
  targetlistincludes: { type: [`array`, `string`] },
  note: { equivalent: `notes` },
  text: { type: [`string`] },
  pointswanted: { type: [`array`, `string`] },
  itemswanted: { type: [`array`, `string`] },
}

/**
 *
 */
function distribuitionAnalysis() {
  const ALL_TAGS = Object.keys(TAGS_DISTRIBUITION)

  const output = []

  const RELEVANT_TAGS = []
  for (const tag of ALL_TAGS) {
    if (TAG_DIRECTIVES[tag] !== undefined) {
      console.log(`"${tag}": ${JSON.stringify(TAG_DIRECTIVES[tag])},`)
      continue
    }
    const occurrences = TAGS_DISTRIBUITION[tag]
    const x = occurrences / N

    // if (x < 0.00005) continue

    RELEVANT_TAGS.push(tag)
    const data = {}

    // STRING
    if (
      [
        `name`,
        `description`,
        `nameext`,
        `cost`, //
        `basecost`,
        `techlvl`,
        `basevalue`,
        `baseweight`,
        `lc`,
        `uses`,
        `damage`,
        `damtype`,
        `minst`,
        `rangehalfdam`,
        `rangemax`,
        `acc`,
        `rof`,
        `shots`,
        `notes`,
        `type`,
        `parryat`,
        `displaycost`,
        `displayweight`,
        `dr`,
        `armordivisor`,
        `bulk`,
        `rcl`,
        `parry`,
        `upto`,
        `mode`,
        `race`,
        `tl`,
        `ident`,
        `time`,
        `duration`,
        `prereqcount`,
        `displayname`,
        `don`,
        `basecostmultiplier`,
        `countasneeds`,
        `magery`,
        `elixircost`,
        `recipecost`,
        `maxscore`,
        `minscore`,
        `familiarities`,
        `break`,
        `holdout`,
        `modifiers`,
        `crushingdr`,
        `feature`,
        `blockat`,
        `reachbasedon`,
        `damagebasedon`,
        `potion`,
        `powder`,
        `ointment`,
        `altname`,
        `baseapppoints`,
        `hp`,
        `malf`,
        `paddingcost`,
        `init`,
        `mainwin`,
        `powerdodge`,
        `mentalpowerblock`,
        `physicalpowerblock`,
        `power`,
        `appearance`,
        `up`,
        `down`,
        `round`,
        `step`,
        `radius`,
        `fuse`,
        `db`,
        `default0`,
        `default1`,
        `default2`,
        `default3`,
        `childprofile`,
        `pastille`,
        `displaycost`,
        `weaponst`,
        `charminst`,
        `dmg`,
        `precountcost`,
        `precountweight`,
        `emptyweight`,
        `group`,
        `modes`,
        `fencingweapon`,
        `existing`,
        `uses_sections`,
        `shortname`,
        `ammoweight`,
        `countcapacity`,
        `ndl`,
        `vars`,
        `displaynameformula`,
        `shieldarc`,
        `load`,
        `hideme`,
        `rapidfire`,
        `text`,
        `st`,
        `dx`,
        `iq`,
        `ht`,
        `will`,
        `per`,
        `speed`,
        `dodge`,
        `move`,
        `sm`,
        `size`,
        `weight`,
      ].includes(tag)
    ) {
      data.type = [`string`]
    }

    if (`locations` === tag) data.equivalent = `location`
    if (`descrition` === tag) data.equivalent = `description`
    if (`dispaycost` === tag) data.equivalent = `displaycost`
    if (`note` === tag) data.equivalent = `notes`

    // BOOLEAN
    if ([`ta`, `display`, `noresync`, `owns`, `locks`, `hides`, `calcrange`, `isparent`, `hide`, `multitype`, `lockstep`, `elementalist`, `links`].includes(tag)) {
      data.type = [`boolean`]
    }

    // ARRAY<STRING>
    if (
      [
        `pointswanted`,
        `cat`,
        `shortcat`,
        `class`, //
        `page`,
        `mods`,
        `ammo`,
        `itemnotes`,
        `skillused`,
        `taboo`,
        `default`,
        `location`,
        `reach`,
        `countasneed`,
        `castingcost`,
        `levelnames`,
        `sets`,
        `parentof`,
        `symbol`,
        `usernotes`,
        `basedr`,
        `coverage`,
        `features`,
        `drnotes`,
        `newlocation`,
        `weightcapacity`,
        `piercingdr`,
        `cuttingdr`,
        `disadat`,
        `impalingdr`,
        `conditional`,
        `basedon`,
        `optspec`,
        `roundup`,
        `units`,
        `subsfor`,
        `vars`,
        `targetlistincludes`,
        `itemswanted`,
      ].includes(tag)
    ) {
      data.type = [`array`, `string`]
    }

    if (`conditonal` === tag) data.equivalent = `conditional`

    if ([`traits`, `skills`].includes(tag)) {
      data.type = [`array`, `string`]
      data.delimiter = `;`
      data.discardFinalPoint = true
    }

    if ([`gives`, `needs`, `adds`, `replacetags`, `creates`, `uses_settings`].includes(tag)) {
      data.type = [`array`]
    }

    if ([`x`, `y`].includes(tag)) {
      data.type = [`array`, `object`]
    }

    if ([`tagwith`].includes(tag)) {
      data.type = [`array`, `object`]
    }

    if (`tagswith` === tag) data.equivalent = [`tagwith`]

    if (
      [
        `select1`,
        `select2`,
        `select3`,
        `select4`,
        `select5`,
        `select6`,
        `select7`,
        `select8`,
        `select9`,
        `select10`,
        `select11`,
        `select12`,
        `select13`,
        `select14`,
        `select15`,
        `select16`,
        `select17`,
        `select18`,
        `select19`,
        `select20`,
        `select21`,
        `initmods`,
      ].includes(tag)
    ) {
      data.type = [`object`]
    }

    if (Object.keys(data).length === 0) console.log(tag)
    else output.push(`"${tag}": ${JSON.stringify(data)}`)
  }
  console.log(` `)
  console.log(` `)
  console.log(` `)
  console.log(output.join(`,\n`))
}

const EXTENDED_TYPES = {
  TRAITS: [`ATTRIBUTES`, `ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`, `SKILLS`, `SPELLS`, `EQUIPMENT`, `TEMPLATES`],
  [`TRAITS-WITH-DAMAGE-MODES`]: [`ATTRIBUTES`, `ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`, `SKILLS`, `SPELLS`, `EQUIPMENT`, `TEMPLATES`],
  // [`TRAITS_WITH_DAMAGE_MODES`]: [
  //   `ATTRIBUTES_WITH_DAMAGE_MODES`,
  //   `ADVANTAGES_WITH_DAMAGE_MODES`,
  //   `PERKS_WITH_DAMAGE_MODES`,
  //   `DISADVANTAGES_WITH_DAMAGE_MODES`,
  //   `QUIRKS_WITH_DAMAGE_MODES`,
  //   `SKILLS_WITH_DAMAGE_MODES`,
  //   `SPELLS_WITH_DAMAGE_MODES`,
  //   `TEMPLATES_WITH_DAMAGE_MODES`,
  // ],
  [`TRAITS-!ATTRIBUTES-!SKILLS-!SPELLS`]: [`ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`, `EQUIPMENT`, `TEMPLATES`],
  [`TRAITS-!SKILLS-!SPELLS-!EQUIPMENT`]: [`ATTRIBUTES`, `ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`, `TEMPLATES`],
  [`TRAITS-!EQUIPMENT`]: [`ATTRIBUTES`, `ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`, `SKILLS`, `SPELLS`, `TEMPLATES`],
}

const _tagsTypesIndex = [
  [[`cost`, `base`, `defaultstat`, `relname`, `stepadds`, `subzero`, `zeropointsokay`, ``], `SKILLTYPES`],
  [[`st`, `thr`, `sw`], `BASICDAMAGE`],
  [[`break`, `adddice`, `subtract`], `CONVERTDICE`],
  [[`name`, `display`, `expanded`, `group`, `posx`, `pos`], `BODY`],
  // [[], `SYMBOLS`],
  // [[], `BODYIMAGES`],
  [[`BaseValue`, `Display`, `Down`, `DownFormula`, `InPlayMult`, `MainWin`, `MaxScore`, `MinScore`, `Round`, `Step`, `Symbol`, `Up`, `UpFormula`], `ATTRIBUTES`],
  // [[], `ADVANTAGES`],
  // [[], `LANGUAGES`],
  // [[], `CULTURES`],
  [[`Base`], [`ADVANTAGES`, `PERKS`, `DISADVANTAGES`, `QUIRKS`]],
  [
    [
      `AddMods`,
      `Adds`,
      `BlockAt`,
      `Cat`,
      `ChildOf`,
      `Conditional`,
      `CountAsNeed`,
      `CountCapacity`,
      `Creates`,
      `DB`,
      `Deflect`,
      `Description`,
      `DisplayNameFormula`,
      `DR`,
      `DRNotes`,
      `FencingWeapon`,
      `Fortify`,
      `Gives`,
      `Group`,
      `Hide`,
      `HideMe`,
      `Highlight`,
      `HighlightMe`,
      `Ident`,
      `InitMods`,
      `Bulk`,
      `ItemNotes`,
      `Links`,
      `MergeTags`,
      `Mods`,
      `Name`,
      `NameExt`,
      `Needs`,
      `NewMode`,
      `Notes`,
      `Page`,
      `ParentOf`,
      `ParryAt`,
      `RemoveMods`,
      `ReplaceTags`,
      `RoundLastOnly`,
      `ScopeAcc`,
      `SkillUsed`,
      `STCap`,
      `SubsFor`,
      `Taboo`,
      `TargetListIncludes`,
      `TL`,
      `Units`,
      `UpTo`,
      `UserNotes`,
      `Uses`,
      `Uses_sections`,
      `Uses_settings`,
      `Uses_used`,
      `Vars`,
      `VTTNotes`,
      `VTTModeNotes`,
      `WeightCapacity`,
      `WeightCapacityUnits`,
    ],
    `TRAITS`,
  ],
  [
    [
      `acc`,
      `ArmorDivisor`,
      `Break`,
      `Damage`,
      `DamageBasedOn`,
      `DamageIsText`,
      `DamType`,
      `LC`,
      `MaxDam`,
      `MinST`,
      `MinSTBasedOn`,
      `Mode`,
      `Parry`,
      `Radius`,
      `RangeHalfDam`,
      `RangeMax`,
      `Rcl`,
      `Reach`,
      `ReachBasedOn`,
      `ROF`,
      `Shots`,
    ],
    `TRAITS-WITH-DAMAGE-MODES`,
  ],
  //
  [[`ChildProfile`, `Collapse`, `CollapseMe`], `PARENTTRAITS`],
  [[`Collapse`, `CollapseMe`], `OWNERTRAITS`],
  //
  [[`Formula`, `Cost`], `TRAITS-!ATTRIBUTES-!SKILLS-!SPELLS`],
  [[`Init`, `LevelNames`], `TRAITS-!SKILLS-!SPELLS-!EQUIPMENT`],
  [[`DownTo`], `TRAITS-!EQUIPMENT`],
  [[`DisplayName`, `Invisible`], `SYSTEMTRAITS`],
  // [[], `PERKS`],
  // [[], `FEATURES`],
  // [[], `DISADVANTAGES`],
  // [[], `QUIRKS`],
  [[`Cost`, `default`, `OptSpec`, `Stat`, `Type`], `SKILLS`],
  [[`Cost`, `default`, `OptSpec`, `Stat`, `Type`, `magery`, `castingcost`, `duration`, `class`], `SPELLS`],
  [
    [
      `AddsOrIncreases`,
      `Age`,
      `Appearance`,
      `BodyType`,
      `CharHeight`,
      `CharWeight`,
      `Features`,
      `Hides`,
      `HitTable`,
      `Locks`,
      `Lockstep`,
      `Message`,
      `Owns`,
      `Race`,
      `Removes`,
      `RemovesByTag`,
      `Select`,
      `SelectX`,
      `Sets`,
      `Triggers`,
    ],
    `TEMPLATES`,
  ],
  [[`ammo`, `BaseCost`, `BaseWeight`, `Count`, `Loadout`, `Location`, `TechLvl`, `Where`], `EQUIPMENT`],
  [
    [
      `addmode`,
      `Cost`,
      `Description`,
      `DisplayNameFormula`,
      `DownTo`,
      `ForceFormula`,
      `Formula`,
      `Gives`,
      `Group`,
      `InitMods`,
      `Level`,
      `Mitigator`,
      `Mods`,
      `Name`,
      `NameExt`,
      `Page`,
      `Round`,
      `RoundMods`,
      `ShortLevelNames`,
      `ShortName`,
      `Tier`,
    ],
    `MODIFIERS`,
  ],
  // [[], `GROUPS`],
  // [[], `LISTS`],
  // [[], `BONUSCLASSES`],
  // [[], `WIZARDS`],
]

const tagTypesIndex = {}
for (const [_tags, _types] of _tagsTypesIndex) {
  const types = isArray(_types) ? _types : [_types]
  const tags = _tags.filter(t => t !== ``).map(t => t.toLowerCase())

  for (const tag of tags) {
    if (tagTypesIndex[tag] === undefined) tagTypesIndex[tag] = []
    tagTypesIndex[tag].push(...types)
  }
}
for (const tag in tagTypesIndex) {
  tagTypesIndex[tag] = [...new Set(tagTypesIndex[tag])]
}

module.exports.EXTENDED_TYPES = EXTENDED_TYPES
module.exports.TAG_TYPES = tagTypesIndex

// distribuitionAnalysis()

module.exports.TAG_DIRECTIVES = TAG_DIRECTIVES
